#Function: ANOVAPlot2
# Will plot box plot in ggplot of data simulated
#inputs: data frame, xVar, yVar, fillVar
#output the blox plot of data
#-----------------------------------------------
ANOVAplot2 <-function(data=df){
names(data)<-c("Treatment","Value")
plot<-ggplot(data=data,aes(x=Treatment,y=Value ,fill=Treatment)) + geom_boxplot()
return(plot)
}
ANOVAplot()
ANOVAplot()
ANOVAplot2()
####################################
# Function: RandomData2
# These function will create random normal data to help simulate and test hypotheses and ultimately create a gamma distribution
#input: mean, n, standard deviation
#output: simulated random normal data set
#-----------------------------------------
RandomData2 <-function(mean1=.2, mean2=.4,mean3=1.0,mean4=1.3,n1=10,n2=10,n3=10, n4=10, sd1=.5, sd2=.5,sd3=.5,sd4=.5){
myDF<-data.frame(Control=rnorm(mean=mean1, n=n1, sd=sd1), Light=rnorm(mean=mean2, n=n2, sd=sd2), Moderate=rnorm(mean=mean3, n=n3, sd=sd3), Extreme=rnorm(mean=mean4, n=n4, sd=sd4))
return(myDF)}
################################
#Function: myANOVA2
#The function will perform an ANOVA analysis and spit generate p values
#input: data frame from 1st function
#output: p values analysis
#-----------------------------
myANOVA2 <- function(dataFrame=df){
ANOVA <- aov(value~variable, data=dataFrame)
myOutput <- summary(ANOVA)
return(myOutput)
}
##############################
#Function: ANOVAPlot2
# Will plot box plot in ggplot of data simulated
#inputs: data frame, xVar, yVar, fillVar
#output the blox plot of data
#-----------------------------------------------
ANOVAplot2 <-function(data=df){
names(data)<-c("Treatment","Value")
plot<-ggplot(data=data,aes(x=Treatment,y=Value ,fill=Treatment)) + geom_boxplot()
return(plot)
}
ANOVAplot()
####################################
# Function: BRandomData
# These function will create random normal data to help simulate and test hypotheses.
#input: mean, n, standard deviation
#output: simulated random normal data set
#-----------------------------------------
BRandomData <-function(mean1=.6, mean2=.75,mean3=.95,mean4=1.1,n1=10,n2=10,n3=10, n4=10, sd1=.3, sd2=.3,sd3=.3,sd4=.3){
myDF<-data.frame(Control=rnorm(mean=mean1, n=n1, sd=sd1), Light=rnorm(mean=mean2, n=n2, sd=sd2), Moderate=rnorm(mean=mean3, n=n3, sd=sd3), Extreme=rnorm(mean=mean4, n=n4, sd=sd4))
return(myDF)}
################################
#Function: BmyANOVA
#The function will perform an ANOVA analysis and spit generate p values
#input: data frame from 1st function
#output: p values analysis
#-----------------------------
BmyANOVA <- function(dataFrame=df){
ANOVA <- aov(value~variable, data=dataFrame)
myOutput <- summary(ANOVA)
return(myOutput)
}
##############################
#Function: BoxPlot
# Will plot box plot in ggplot of data simulated
#inputs: data frame, xVar, yVar, fillVar
#output the blox plot of data
#-----------------------------------------------
```{r}
####################################
# Function: BRandomData
# These function will create random normal data to help simulate and test hypotheses.
#input: mean, n, standard deviation
#output: simulated random normal data set
#-----------------------------------------
BRandomData <-function(mean1=.6, mean2=.75,mean3=.95,mean4=1.1,n1=10,n2=10,n3=10, n4=10, sd1=.3, sd2=.3,sd3=.3,sd4=.3){
myDF<-data.frame(Control=rnorm(mean=mean1, n=n1, sd=sd1), Light=rnorm(mean=mean2, n=n2, sd=sd2), Moderate=rnorm(mean=mean3, n=n3, sd=sd3), Extreme=rnorm(mean=mean4, n=n4, sd=sd4))
return(myDF)}
################################
#Function: BmyANOVA
#The function will perform an ANOVA analysis and spit generate p values
#input: data frame from 1st function
#output: p values analysis
#-----------------------------
BmyANOVA <- function(dataFrame=df){
ANOVA <- aov(value~variable, data=dataFrame)
myOutput <- summary(ANOVA)
return(myOutput)
}
##############################
#Function: BoxPlot
# Will plot box plot in ggplot of data simulated
#inputs: data frame, xVar, yVar, fillVar
#output the blox plot of data
#-----------------------------------------------
BoxPlot <-function(data=df){
names(data)<-c("Treatment","Value")
plot<<-ggplot(data=df, aes(x=Treatment, y=Value)) +
geom_bar(stat="identity")
}
BoxPlot()
####################################
# Function: BRandomData
# These function will create random normal data to help simulate and test hypotheses.
#input: mean, n, standard deviation
#output: simulated random normal data set
#-----------------------------------------
BRandomData <-function(mean1=.6, mean2=.75,mean3=.95,mean4=1.1,n1=10,n2=10,n3=10, n4=10, sd1=.3, sd2=.3,sd3=.3,sd4=.3){
myDF<-data.frame(Control=rnorm(mean=mean1, n=n1, sd=sd1), Light=rnorm(mean=mean2, n=n2, sd=sd2), Moderate=rnorm(mean=mean3, n=n3, sd=sd3), Extreme=rnorm(mean=mean4, n=n4, sd=sd4))
return(myDF)}
################################
#Function: BmyANOVA
#The function will perform an ANOVA analysis and spit generate p values
#input: data frame from 1st function
#output: p values analysis
#-----------------------------
BmyANOVA <- function(dataFrame=df){
ANOVA <- aov(value~variable, data=dataFrame)
myOutput <- summary(ANOVA)
return(myOutput)
}
##############################
#Function: BPlot
# Will plot box plot in ggplot of data simulated
#inputs: data frame, xVar, yVar, fillVar
#output the blox plot of data
#-----------------------------------------------
BPlot <-function(data=df){
names(data)<-c("Treatment","Value")
plot<-ggplot(data=df, aes(x=Treatment, y=Value)) +
geom_bar(stat="identity")
}
BPlot()
####################################
# Function: BRandomData
# These function will create random normal data to help simulate and test hypotheses.
#input: mean, n, standard deviation
#output: simulated random normal data set
#-----------------------------------------
BRandomData <-function(mean1=.6, mean2=.75,mean3=.95,mean4=1.1,n1=10,n2=10,n3=10, n4=10, sd1=.3, sd2=.3,sd3=.3,sd4=.3){
myDF<-data.frame(Control=rnorm(mean=mean1, n=n1, sd=sd1), Light=rnorm(mean=mean2, n=n2, sd=sd2), Moderate=rnorm(mean=mean3, n=n3, sd=sd3), Extreme=rnorm(mean=mean4, n=n4, sd=sd4))
return(myDF)}
################################
#Function: BmyANOVA
#The function will perform an ANOVA analysis and spit generate p values
#input: data frame from 1st function
#output: p values analysis
#-----------------------------
BmyANOVA <- function(dataFrame=df){
ANOVA <- aov(value~variable, data=dataFrame)
myOutput <- summary(ANOVA)
return(myOutput)
}
##############################
#Function: BPlot
# Will plot box plot in ggplot of data simulated
#inputs: data frame, xVar, yVar, fillVar
#output the blox plot of data
#-----------------------------------------------
BPlot <-function(data=df){
names(data)<-c("Treatment","Value")
plot<-ggplot(data=df, aes(x=Treatment, y=Value)) +
geom_bar(stat="identity")
}
BPlot()
# Call libraries needed
library(ggplot2)
library(reshape2)
# Create Variables
nGroup <- 4
nName <- c("Control", "Light", "Moderate", "Extreme")
nSize <- c(10,10,10,10) # both are n = 6
nMean <- c(0.6, 0.75,0.95,1.1) # mean response in each group
nSD <- c(0.3,0.3,0.3,0.3) # variance in each group
ID <- 1:(sum(nSize))
####################################
# Function: RandomData
# These function will create random normal data to help simulate and test hypotheses.
#input: mean, n, standard deviation
#output: simulated random normal data set
#-----------------------------------------
RandomData <-function(mean1=.6, mean2=.75,mean3=.95,mean4=1.1,n1=10,n2=10,n3=10, n4=10, sd1=.3, sd2=.3,sd3=.3,sd4=.3){
myDF<-data.frame(Control=rnorm(mean=mean1, n=n1, sd=sd1), Light=rnorm(mean=mean2, n=n2, sd=sd2), Moderate=rnorm(mean=mean3, n=n3, sd=sd3), Extreme=rnorm(mean=mean4, n=n4, sd=sd4))
return(myDF)}
################################
#Function: myANOVA
#The function will perform an ANOVA analysis and spit generate p values
#input: data frame from 1st function
#output: p values analysis
#-----------------------------
myANOVA <- function(dataFrame=df){
ANOVA <- aov(value~variable, data=dataFrame)
myOutput <- summary(ANOVA)
return(myOutput)
}
##############################
#Function: ANOVAPlot
# Will plot box plot in ggplot of data simulated
#inputs: data frame, xVar, yVar, fillVar
#output the blox plot of data
#-----------------------------------------------
ANOVAplot <-function(data=df){
names(data)<-c("Treatment","Value")
plot<-ggplot(data=data,aes(x=Treatment,y=Value ,fill=Treatment)) + geom_boxplot()
return(plot)
}
ANOVAplot()
#Calling my functions:
RandomData()
myANOVA()
ANOVAplot()
####################################
# Function: BRandomData
# These function will create random normal data to help simulate and test hypotheses.
#input: mean, n, standard deviation
#output: simulated random normal data set
#-----------------------------------------
BRandomData <-function(mean1=.6, mean2=.75,mean3=.95,mean4=1.1,n1=10,n2=10,n3=10, n4=10, sd1=.3, sd2=.3,sd3=.3,sd4=.3){
myDF<-data.frame(Control=rnorm(mean=mean1, n=n1, sd=sd1), Light=rnorm(mean=mean2, n=n2, sd=sd2), Moderate=rnorm(mean=mean3, n=n3, sd=sd3), Extreme=rnorm(mean=mean4, n=n4, sd=sd4))
return(myDF)}
################################
#Function: BmyANOVA
#The function will perform an ANOVA analysis and spit generate p values
#input: data frame from 1st function
#output: p values analysis
#-----------------------------
BmyANOVA <- function(dataFrame=df){
ANOVA <- aov(value~variable, data=dataFrame)
myOutput <- summary(ANOVA)
return(myOutput)
}
##############################
#Function: BPlot
# Will plot box plot in ggplot of data simulated
#inputs: data frame, xVar, yVar, fillVar
#output the blox plot of data
#-----------------------------------------------
BPlot <-function(data=df){
names(data)<-c("Treatment","Value")
plot<-ggplot(data=df, aes(x=Treatment, y=Value)) +
geom_bar(stat="identity")
}
BPlot()
####################################
# Function: BRandomData
# These function will create random normal data to help simulate and test hypotheses.
#input: mean, n, standard deviation
#output: simulated random normal data set
#-----------------------------------------
BRandomData <-function(mean1=.6, mean2=.75,mean3=.95,mean4=1.1,n1=10,n2=10,n3=10, n4=10, sd1=.3, sd2=.3,sd3=.3,sd4=.3){
myDF<-data.frame(Control=rnorm(mean=mean1, n=n1, sd=sd1), Light=rnorm(mean=mean2, n=n2, sd=sd2), Moderate=rnorm(mean=mean3, n=n3, sd=sd3), Extreme=rnorm(mean=mean4, n=n4, sd=sd4))
return(myDF)}
################################
#Function: BmyANOVA
#The function will perform an ANOVA analysis and spit generate p values
#input: data frame from 1st function
#output: p values analysis
#-----------------------------
BmyANOVA <- function(dataFrame=df){
ANOVA <- aov(value~variable, data=dataFrame)
myOutput <- summary(ANOVA)
return(myOutput)
}
##############################
#Function: BPlot
# Will plot box plot in ggplot of data simulated
#inputs: data frame, xVar, yVar, fillVar
#output the blox plot of data
#-----------------------------------------------
BPlot <-function(data=df){
plot<-ggplot(df, aes(x=Treatment, y=Value, fill=Value)) +
geom_bar(stat="identity")+theme_minimal()
return(plot)
}
####################################
# Function: BRandomData
# These function will create random normal data to help simulate and test hypotheses.
#input: mean, n, standard deviation
#output: simulated random normal data set
#-----------------------------------------
BRandomData <-function(mean1=.6, mean2=.75,mean3=.95,mean4=1.1,n1=10,n2=10,n3=10, n4=10, sd1=.3, sd2=.3,sd3=.3,sd4=.3){
myDF<-data.frame(Control=rnorm(mean=mean1, n=n1, sd=sd1), Light=rnorm(mean=mean2, n=n2, sd=sd2), Moderate=rnorm(mean=mean3, n=n3, sd=sd3), Extreme=rnorm(mean=mean4, n=n4, sd=sd4))
return(myDF)}
################################
#Function: BmyANOVA
#The function will perform an ANOVA analysis and spit generate p values
#input: data frame from 1st function
#output: p values analysis
#-----------------------------
BmyANOVA <- function(dataFrame=df){
ANOVA <- aov(value~variable, data=dataFrame)
myOutput <- summary(ANOVA)
return(myOutput)
}
##############################
#Function: BPlot
# Will plot box plot in ggplot of data simulated
#inputs: data frame, xVar, yVar, fillVar
#output the blox plot of data
#-----------------------------------------------
BPlot <-function(data=df){
plot<-ggplot(df, aes(x=Treatment, y=Value, fill=Treatment)) +
geom_bar(stat="identity")+theme_minimal()
return(plot)
}
# Call libraries needed
library(ggplot2)
library(reshape2)
# Create Variables
nGroup <- 4
nName <- c("Control", "Light", "Moderate", "Extreme")
nSize <- c(10,10,10,10) # both are n = 6
nMean <- c(0.6, 0.75,0.95,1.1) # mean response in each group
nSD <- c(0.3,0.3,0.3,0.3) # variance in each group
ID <- 1:(sum(nSize))
####################################
# Function: RandomData
# These function will create random normal data to help simulate and test hypotheses.
#input: mean, n, standard deviation
#output: simulated random normal data set
#-----------------------------------------
RandomData <-function(mean1=.6, mean2=.75,mean3=.95,mean4=1.1,n1=10,n2=10,n3=10, n4=10, sd1=.3, sd2=.3,sd3=.3,sd4=.3){
myDF<-data.frame(Control=rnorm(mean=mean1, n=n1, sd=sd1), Light=rnorm(mean=mean2, n=n2, sd=sd2), Moderate=rnorm(mean=mean3, n=n3, sd=sd3), Extreme=rnorm(mean=mean4, n=n4, sd=sd4))
return(myDF)}
################################
#Function: myANOVA
#The function will perform an ANOVA analysis and spit generate p values
#input: data frame from 1st function
#output: p values analysis
#-----------------------------
myANOVA <- function(dataFrame=df){
ANOVA <- aov(value~variable, data=dataFrame)
myOutput <- summary(ANOVA)
return(myOutput)
}
##############################
#Function: ANOVAPlot
# Will plot box plot in ggplot of data simulated
#inputs: data frame, xVar, yVar, fillVar
#output the blox plot of data
#-----------------------------------------------
ANOVAplot <-function(data=df){
names(data)<-c("Treatment","Value")
plot<-ggplot(data=data,aes(x=Treatment,y=Value ,fill=Treatment)) + geom_boxplot()
return(plot)
}
ANOVAplot()
df<-RandomData()
df
RandomData()
mean1=.6, mean2=.75,mean3=.95,mean4=1.1,n1=10,n2=10,n3=10, n4=10, sd1=.3, sd2=.3,sd3=.3,sd4=.3
####################################
# Function: RandomData
# These function will create random normal data to help simulate and test hypotheses.
#input: mean, n, standard deviation
#output: simulated random normal data set
#-----------------------------------------
RandomData <-function(mean1=.6, mean2=.75,mean3=.95,mean4=1.1,n1=10,n2=10,n3=10, n4=10, sd1=.3, sd2=.3,sd3=.3,sd4=.3){
myDF<-data.frame(Control=rnorm(mean=mean1, n=n1, sd=sd1), Light=rnorm(mean=mean2, n=n2, sd=sd2), Moderate=rnorm(mean=mean3, n=n3, sd=sd3), Extreme=rnorm(mean=mean4, n=n4, sd=sd4))
return(myDF)}
df<-RandomData()
################################
#Function: myANOVA
#The function will perform an ANOVA analysis and spit generate p values
#input: data frame from 1st function
#output: p values analysis
#-----------------------------
myANOVA <- function(dataFrame=df){
ANOVA <- aov(value~variable, data=dataFrame)
myOutput <- summary(ANOVA)
return(myOutput)
}
myANOVA()
####################################
# Function: RandomData
# These function will create random normal data to help simulate and test hypotheses.
#input: mean, n, standard deviation
#output: simulated random normal data set
#-----------------------------------------
RandomData <-function(mean1=.6, mean2=.75,mean3=.95,mean4=1.1,n1=10,n2=10,n3=10, n4=10, sd1=.3, sd2=.3,sd3=.3,sd4=.3){
myDF<-data.frame(Control=rnorm(mean=mean1, n=n1, sd=sd1), Light=rnorm(mean=mean2, n=n2, sd=sd2), Moderate=rnorm(mean=mean3, n=n3, sd=sd3), Extreme=rnorm(mean=mean4, n=n4, sd=sd4))
myDF2<-melt(myDF)
return(myDF2)
}
RandomData()
RandomData()
################################
#Function: myANOVA
#The function will perform an ANOVA analysis and spit generate p values
#input: data frame from 1st function
#output: p values analysis
#-----------------------------
myANOVA <- function(dataFrame=df){
ANOVA <- aov(value~variable, data=dataFrame)
myOutput <- summary(ANOVA)
return(myOutput)
}
myANOVA()
df<-RandomData()
################################
#Function: myANOVA
#The function will perform an ANOVA analysis and spit generate p values
#input: data frame from 1st function
#output: p values analysis
#-----------------------------
myANOVA <- function(dataFrame=df){
ANOVA <- aov(value~variable, data=dataFrame)
myOutput <- summary(ANOVA)
return(myOutput)
}
myANOVA()
=df
df
##############################
#Function: BPlot
# Will plot box plot in ggplot of data simulated
#inputs: data frame, xVar, yVar, fillVar
#output the blox plot of data
#-----------------------------------------------
BPlot <-function(data=df){
plot<-ggplot(df, aes(x=variable, y=value, fill=variable)) +
geom_bar(stat="identity")+theme_minimal()
return(plot)
}
BPlot()
ANOVAplot()
BPlot()
# Call libraries needed
library(ggplot2)
library(reshape2)
# Create Variables
nGroup <- 4
nName <- c("Control", "Light", "Moderate", "Extreme")
nSize <- c(10,10,10,10) # both are n = 6
nMean <- c(0.6, 0.75,0.95,1.1) # mean response in each group
nSD <- c(0.3,0.3,0.3,0.3) # variance in each group
ID <- 1:(sum(nSize))
####################################
# Function: RandomData
# These function will create random normal data to help simulate and test hypotheses.
#input: mean, n, standard deviation
#output: simulated random normal data set
#-----------------------------------------
RandomData <-function(mean1=.6, mean2=.75,mean3=.95,mean4=1.1,n1=10,n2=10,n3=10, n4=10, sd1=.3, sd2=.3,sd3=.3,sd4=.3){
myDF<-data.frame(Control=rnorm(mean=mean1, n=n1, sd=sd1), Light=rnorm(mean=mean2, n=n2, sd=sd2), Moderate=rnorm(mean=mean3, n=n3, sd=sd3), Extreme=rnorm(mean=mean4, n=n4, sd=sd4))
myDF2<-melt(myDF)
return(myDF2)
}
df<-RandomData()
################################
#Function: myANOVA
#The function will perform an ANOVA analysis and spit generate p values
#input: data frame from 1st function
#output: p values analysis
#-----------------------------
myANOVA <- function(dataFrame=df){
ANOVA <- aov(value~variable, data=dataFrame)
myOutput <- summary(ANOVA)
return(myOutput)
}
##############################
#Function: ANOVAPlot
# Will plot box plot in ggplot of data simulated
#inputs: data frame, xVar, yVar, fillVar
#output the blox plot of data
#-----------------------------------------------
ANOVAplot <-function(data=df){
names(data)<-c("Treatment","Value")
plot<-ggplot(data=data,aes(x=Treatment,y=Value ,fill=Treatment)) + geom_boxplot()
return(plot)
}
ANOVAplot()
#Calling my functions:
RandomData()
myANOVA()
ANOVAplot()
####################################
# Function: BRandomData
# These function will create random normal data to help simulate and test hypotheses.
#input: mean, n, standard deviation
#output: simulated random normal data set
#-----------------------------------------
BRandomData <-function(mean1=.6, mean2=.75,mean3=.95,mean4=1.1,n1=10,n2=10,n3=10, n4=10, sd1=.3, sd2=.3,sd3=.3,sd4=.3){
myDF<-data.frame(Control=rnorm(mean=mean1, n=n1, sd=sd1), Light=rnorm(mean=mean2, n=n2, sd=sd2), Moderate=rnorm(mean=mean3, n=n3, sd=sd3), Extreme=rnorm(mean=mean4, n=n4, sd=sd4))
return(myDF)}
################################
#Function: BmyANOVA
#The function will perform an ANOVA analysis and spit generate p values
#input: data frame from 1st function
#output: p values analysis
#-----------------------------
BmyANOVA <- function(dataFrame=df){
ANOVA <- aov(value~variable, data=dataFrame)
myOutput <- summary(ANOVA)
return(myOutput)
}
##############################
#Function: BPlot
# Will plot box plot in ggplot of data simulated
#inputs: data frame, xVar, yVar, fillVar
#output the blox plot of data
#-----------------------------------------------
BPlot <-function(data=df){
plot<-ggplot(df, aes(x=variable, y=value, fill=variable)) +
geom_bar(stat="identity")+theme_minimal()
return(plot)
}
ANOVAplot()
BPlot()
